type User {
    name: String!
    username: String!
}

type Session {
    token: ID!
    expiresAt: String!
}

input RegisterInput {
    name: String!
    username: String!
    password: String!
}

input LoginInput {
    username: String!
    password: String!
}

input AddEntryInput {
    date: String!
    categoryId: ID!
    sum: Int!
}

input GetEntriesInput {
    date: String!
    categoryId: ID
    page: Int!
}

enum DailyTotalsPreset {
    LAST_7_DAYS
    LAST_30_DAYS
    NEXT_7_DAYS
    NEXT_30_DAYS
}

input EntryTotalsInput {
    categoryId: ID!
    preset: DailyTotalsPreset!
}

input GetCategoriesInput {
    parent: ID
}

type AuthResponse {
    session: Session!
    user: User!
}

type DailyTotals {
    date: String!
    sum: Float!
    category: Category!
}

type Queries {
    ping: String
    entries(getEntriesInput: GetEntriesInput!): [Entry!]!
    entryTotals(entryTotalsInput: EntryTotalsInput!): [DailyTotals!]!
    categories(getCategoriesInput: GetCategoriesInput!): [CategoryWithParent!]!
}

type Category {
    _id: ID!
    name: String!
}

type CategoryWithParent {
    _id: ID!
    name: String!
    parent: ID
    hasChildren: Boolean!
}

type Entry {
    _id: ID!
    date: String!
    category: Category!
    sum: Int!
}

type Mutations {
    register(registerInput: RegisterInput!): AuthResponse!
    login(loginInput: LoginInput!): AuthResponse!
    addEntry(addEntryInput: AddEntryInput!): Entry!
}

schema {
    query: Queries
    mutation: Mutations
}
